unit UService.User;

interface

uses
  UEntity.Users, UService.Base;

type
  TServiceUser = class(TServiceBase)
    private
      FUser: TUser;
    public
      constructor Create; overload;
      constructor Create(auser: TUser); overload;
      destructor Destroy; override;

      procedure Registrar; override;
      procedure Listar; override;
      procedure Excluir; override;

      function ObterRegistro(const aId: Integer): TObject; override;
  end;

implementation

{ TServiceUser }

constructor TServiceUser.Create;
begin

end;

constructor TServiceUser.Create(auser: TUser);
begin

end;

destructor TServiceUser.Destroy;
begin

  inherited;
end;

procedure TServiceUser.Excluir;
begin
  inherited;

end;

procedure TServiceUser.Listar;
begin
  inherited;

end;

function TServiceUser.ObterRegistro(const aId: Integer): TObject;
begin

end;

procedure TServiceUser.Registrar;
begin
  inherited;

end;

end.
